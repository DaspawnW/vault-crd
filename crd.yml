apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: vault.koudingspawn.de
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: koudingspawn.de
  # version name to use for REST API: /apis/<group>/<version>
  version: v1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: vault
    # singular name to be used as an alias on the CLI and for display
    singular: vault
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: Vault
    shortNames:
        - vt
  validation:
    # openAPIV3Schema is the schema for validating custom objects.
    openAPIV3Schema:
      properties:
        spec:
          properties:
            path:
              type: string
              pattern: '^.*?\/.*?(\/.*?)?$'
            type:
              type: string
              enum:
                - PKI
                - PKIJKS
                - CERT
                - CERTJKS
                - DOCKERCFG
                - KEYVALUE
                - KEYVALUEV2
                - PROPERTIES
            pkiConfiguration:
              type: object
              properties:
                commonName:
                  type: string
                altNames:
                  type: string
                ipSans:
                  type: string
                ttl:
                  type: string
                  pattern: '^[0-9]{1,}[hm]$'
            jksConfiguration:
              type: object
              properties:
                password:
                  type: string
                alias:
                  type: string
                keyName:
                  type: string
            versionConfiguration:
              type: object
              properties:
                version:
                  type: integer
            propertiesConfiguration:
              type: object
              properties:
                files:
                  type: object
                context:
                  type: object
          required:
          - type